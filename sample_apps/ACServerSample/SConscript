# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0


# sample usage:
# scons EVENTS_AND_ACTIONS=0 TARG=linux WS=off VARIANT=debug 
# defaults:
# EVENTS_AND_ACTIONS=1

import os

Import('env')

vars = Variables()

sersamp_env = env.Clone()

Export('sersamp_env')

if sersamp_env['VARIANT'] == 'debug':
    sersamp_env.Append(CPPDEFINES = ['ER_DEBUG_AJSVCAPP=1'])
    sersamp_env.Append(CPPDEFINES = ['ER_DEBUG_AJSVCALL=1'])
    sersamp_env.Append(CPPDEFINES = ['AJ_DEBUG_RESTRICT=AJ_DEBUG_INFO'])

# build the service sample, based on command-line args
build_eventsandactions_default      = 1 # do    build by default

build_eventsandactions = ARGUMENTS.get('EVENTS_AND_ACTIONS', build_eventsandactions_default)

sersamp_env.Append(CPPPATH = [Dir('../')])
sersamp_env.Append(CPPPATH = [Dir('../../AppsCommon/inc')])
sersamp_env.Append(CPPPATH = [Dir('../../AppsCommon/target/' + sersamp_env['TARG'])])
sersamp_env.Append(CPPPATH = [Dir('../../../notification/inc')])

main_exe = 'ACServerSample'

srcs = ['ACServerSample.c']

common_samples_srcs = ['AppHandlers.c']

objs = []

common_samples_srcs.extend(['ConfigSample.c'])
objs.extend(sersamp_env.SConscript('../../../config/SConscript', {'config_env': sersamp_env}))

srcs.extend(['ACNotificationProducerSample.c'])
objs.extend(SConscript('../../../notification/src/NotificationProducer/SConscript', exports = {'notif_env': sersamp_env}))
objs.extend(SConscript('../../../notification/src/NotificationCommon/SConscript', exports = {'notif_env': sersamp_env}))

srcs.extend(['ControlPanelGenerated.c', 'ControlPanelProvided.c', 'ControlPanelSample.c'])
objs.extend(SConscript('../../../controlpanel/SConscript', {'cps_env': sersamp_env}))

if int(build_eventsandactions):
    sersamp_env.Append(CPPDEFINES = ['EVENTS_AND_ACTIONS'])
    srcs.extend(['EventsAndActionsSample.c'])

objs.extend(sersamp_env.Object(srcs))

sersamp_env['common_samples_srcs'] = common_samples_srcs
objs.extend(sersamp_env.SConscript('../../AppsCommon/SConscript', variant_dir = 'AppsCommon', duplicate = 1, exports = {'appsCommon_env': sersamp_env}))

objs.extend(sersamp_env.SConscript('../../../services_common/SConscript', variant_dir = 'services_common', duplicate = 1, exports = {'services_common_env': sersamp_env}))

prog = sersamp_env.Program(
    target = main_exe,
    source = [
              objs,
              sersamp_env['aj_obj'],
    ]
 )
sersamp_env.Install('../build', prog)